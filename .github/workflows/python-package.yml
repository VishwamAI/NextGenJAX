name: Python package

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Print requirements files
      run: |
        echo "Contents of requirements.txt:"
        cat requirements.txt
        echo "Contents of test_requirements.txt:"
        cat test_requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest transformers
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
      timeout-minutes: 20
    - name: Install nextgenjax
      run: pip install -e .
    - name: List installed packages
      run: pip list
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run tests
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest src tests
      timeout-minutes: 15

  cuda-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install CUDA dependencies
      run: |
        # Add commands to install CUDA dependencies
      timeout-minutes: 20
    - name: Run CUDA-specific tests
      run: |
        # Add commands to run CUDA-specific tests
      timeout-minutes: 30