name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Install Bazel
      run: |
        sudo apt-get install apt-transport-https curl gnupg -y
        curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
        sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
        echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
        sudo apt-get update && sudo apt-get install bazel -y
    - name: Install DeepMind Lab dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev python3-numpy python3-pil libboost-all-dev libsdl2-dev \
          libjpeg-dev nasm zip libbz2-dev libffi-dev libssl-dev curl build-essential
    - name: Install gettext
      run: sudo apt-get install -y gettext
    - name: Clone and install DeepMind Lab
      run: |
        git clone https://github.com/deepmind/lab.git
        cd lab
        bazel build -c opt //python/pip_package:build_pip_package
        ./bazel-bin/python/pip_package/build_pip_package /tmp/dmlab_pkg
        pip install /tmp/dmlab_pkg/deepmind_lab-*.whl
    - name: Install TensorFlow and PyTorch
      run: |
        pip install tensorflow torch torchvision torchaudio
    - name: Install additional dependencies
      run: |
        pip install transformers
    - name: Verify library installations
      run: |
        python -c "import tensorflow as tf; import torch; from transformers import AutoModel; import deepmind_lab; print('TensorFlow version:', tf.__version__); print('PyTorch version:', torch.__version__); print('Transformers version:', transformers.__version__); print('DeepMind Lab version:', deepmind_lab.__version__)"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/ --framework=tensorflow --framework=pytorch
